trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'
  appxPackageDir: 'AppPackages'
  version.Major: '1'
  version.Minor: '0'
  version.Patch: '0' 
  versionNumber: '$(version.Major).$(version.Minor).$(version.Patch).0' 

steps:
- task: VersionAssemblies@2
  inputs:
    Path: '$(Build.SourcesDirectory)/src/'
    VersionNumber: '$(versionNumber)'
    InjectVersion: true
    FilenamePattern: 'GlobalAssemblyInfo.*'
    OutputVersion: 'OutputedVersion'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'ladislavpataki'
    scannerMode: 'MSBuild'
    projectKey: 'CleanArch'
    extraProperties: |
      sonar.exclusions=**/*.bin
      sonar.cs.dotcover.reportsPath=$(Common.TestResultsDirectory)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=false /restore'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --logger:"trx;LogFileName=$(Common.TestResultsDirectory)" --collect:"Code Coverage" /p:CoverletOutputFormat=opencover'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/src/Company.Product.Package/'
    Contents: 'AppPackages/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'    

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/src/Output/Executables/Release'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
